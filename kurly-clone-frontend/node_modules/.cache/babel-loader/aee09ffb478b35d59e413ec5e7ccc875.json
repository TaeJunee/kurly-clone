{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JUNE\\\\Desktop\\\\market-kurly-react\\\\src\\\\components\\\\postcode\\\\SearchPostCode.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDaumPostcodePopup } from 'react-daum-postcode';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Postcode() {\n  _s();\n\n  const open = useDaumPostcodePopup();\n  const [isComplete, setIsComplete] = useState(false);\n  const [address, setAddress] = useState('');\n\n  const handleComplete = data => {\n    let fullAddress = data.address;\n    let extraAddress = '';\n\n    if (data.addressType === 'R') {\n      if (data.bname !== '') {\n        extraAddress += data.bname;\n      }\n\n      if (data.buildingName !== '') {\n        extraAddress += extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName;\n      }\n\n      fullAddress += extraAddress !== '' ? ` (${extraAddress})` : '';\n    }\n\n    setIsComplete(true);\n    setAddress(fullAddress);\n  };\n\n  const handleClick = () => {\n    open({\n      onComplete: handleComplete\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!isComplete && /*#__PURE__*/_jsxDEV(SearchAddress, {\n      onClick: handleClick,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://res.kurly.com/pc/service/cart/2007/ico_search.svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), \"\\uC8FC\\uC18C \\uAC80\\uC0C9\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), isComplete && /*#__PURE__*/_jsxDEV(InputField, {\n      name: \"address\",\n      placeholder: \"\\uC8FC\\uC18C\\uB97C \\uAC80\\uC0C9\\uD574\\uC8FC\\uC138\\uC694\",\n      type: \"text\",\n      value: address,\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Postcode, \"0qT4U7OHYWiEzTfSnanGdbD9Jr8=\", false, function () {\n  return [useDaumPostcodePopup];\n});\n\n_c = Postcode;\n;\nconst SearchAddress = styled.button`\n  display: block;\n  padding: 0px 10px;\n  text-align: center;\n  overflow: hidden;\n  width: 100%;\n  height: 44px;\n  border-radius: 4px;\n  color: rgb(95, 0, 128);\n  background-color: rgb(255, 255, 255);\n  border: 1px solid rgb(95, 0, 128);\n  span {\n    font-size: 14px;\n    font-weight: 500;\n    img {\n      display: inline-block;\n      width: 20px;\n      height: 20px;\n      margin-right: 4px;\n      vertical-align: middle;\n    }\n  }\n`;\n_c2 = SearchAddress;\nconst InputField = styled.input`\n  width: 100%;\n  height: 46x;\n  padding: 0px 11px 1px 15px;\n  border-radius: 4px;\n  border: 1px solid rgb(221, 221, 221);\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.5;\n  color: rgb(51, 51, 51);\n  outline: none;\n  box-sizing: border-box;\n`;\n_c3 = InputField;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Postcode\");\n$RefreshReg$(_c2, \"SearchAddress\");\n$RefreshReg$(_c3, \"InputField\");","map":{"version":3,"names":["React","useState","useDaumPostcodePopup","styled","Postcode","open","isComplete","setIsComplete","address","setAddress","handleComplete","data","fullAddress","extraAddress","addressType","bname","buildingName","handleClick","onComplete","SearchAddress","button","InputField","input"],"sources":["C:/Users/JUNE/Desktop/market-kurly-react/src/components/postcode/SearchPostCode.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useDaumPostcodePopup } from 'react-daum-postcode'\r\nimport styled from 'styled-components'\r\n\r\nexport default function Postcode() {\r\n  const open = useDaumPostcodePopup();\r\n  const [isComplete, setIsComplete] = useState<boolean>(false);\r\n  const [address, setAddress] = useState<string>('');\r\n\r\n  const handleComplete = (data: any) => {\r\n    let fullAddress = data.address;\r\n    let extraAddress = '';\r\n\r\n    if (data.addressType === 'R') {\r\n      if (data.bname !== '') {\r\n        extraAddress += data.bname;\r\n      }\r\n      if (data.buildingName !== '') {\r\n        extraAddress += extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName;\r\n      }\r\n      fullAddress += extraAddress !== '' ? ` (${extraAddress})` : '';\r\n    }\r\n    setIsComplete(true);\r\n    setAddress(fullAddress);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    open({ onComplete: handleComplete });\r\n  };\r\n\r\n  return (\r\n    <>\r\n    {!isComplete && \r\n      <SearchAddress onClick={handleClick}>\r\n        <span>\r\n          <img src=\"https://res.kurly.com/pc/service/cart/2007/ico_search.svg\" />주소 검색\r\n        </span>\r\n      </SearchAddress>}\r\n    {isComplete && \r\n      <InputField\r\n        name=\"address\"\r\n        placeholder=\"주소를 검색해주세요\"\r\n        type=\"text\"\r\n        value={address}\r\n        readOnly\r\n      />}\r\n    </>\r\n  );\r\n};\r\n\r\nconst SearchAddress = styled.button`\r\n  display: block;\r\n  padding: 0px 10px;\r\n  text-align: center;\r\n  overflow: hidden;\r\n  width: 100%;\r\n  height: 44px;\r\n  border-radius: 4px;\r\n  color: rgb(95, 0, 128);\r\n  background-color: rgb(255, 255, 255);\r\n  border: 1px solid rgb(95, 0, 128);\r\n  span {\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n    img {\r\n      display: inline-block;\r\n      width: 20px;\r\n      height: 20px;\r\n      margin-right: 4px;\r\n      vertical-align: middle;\r\n    }\r\n  }\r\n`\r\n\r\nconst InputField = styled.input`\r\n  width: 100%;\r\n  height: 46x;\r\n  padding: 0px 11px 1px 15px;\r\n  border-radius: 4px;\r\n  border: 1px solid rgb(221, 221, 221);\r\n  font-weight: 400;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n  color: rgb(51, 51, 51);\r\n  outline: none;\r\n  box-sizing: border-box;\r\n`"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,oBAAT,QAAqC,qBAArC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,eAAe,SAASC,QAAT,GAAoB;EAAA;;EACjC,MAAMC,IAAI,GAAGH,oBAAoB,EAAjC;EACA,MAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAU,KAAV,CAA5C;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAS,EAAT,CAAtC;;EAEA,MAAMS,cAAc,GAAIC,IAAD,IAAe;IACpC,IAAIC,WAAW,GAAGD,IAAI,CAACH,OAAvB;IACA,IAAIK,YAAY,GAAG,EAAnB;;IAEA,IAAIF,IAAI,CAACG,WAAL,KAAqB,GAAzB,EAA8B;MAC5B,IAAIH,IAAI,CAACI,KAAL,KAAe,EAAnB,EAAuB;QACrBF,YAAY,IAAIF,IAAI,CAACI,KAArB;MACD;;MACD,IAAIJ,IAAI,CAACK,YAAL,KAAsB,EAA1B,EAA8B;QAC5BH,YAAY,IAAIA,YAAY,KAAK,EAAjB,GAAuB,KAAIF,IAAI,CAACK,YAAa,EAA7C,GAAiDL,IAAI,CAACK,YAAtE;MACD;;MACDJ,WAAW,IAAIC,YAAY,KAAK,EAAjB,GAAuB,KAAIA,YAAa,GAAxC,GAA6C,EAA5D;IACD;;IACDN,aAAa,CAAC,IAAD,CAAb;IACAE,UAAU,CAACG,WAAD,CAAV;EACD,CAfD;;EAiBA,MAAMK,WAAW,GAAG,MAAM;IACxBZ,IAAI,CAAC;MAAEa,UAAU,EAAER;IAAd,CAAD,CAAJ;EACD,CAFD;;EAIA,oBACE;IAAA,WACC,CAACJ,UAAD,iBACC,QAAC,aAAD;MAAe,OAAO,EAAEW,WAAxB;MAAA,uBACE;QAAA,wBACE;UAAK,GAAG,EAAC;QAAT;UAAA;UAAA;UAAA;QAAA,QADF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFF,EAOCX,UAAU,iBACT,QAAC,UAAD;MACE,IAAI,EAAC,SADP;MAEE,WAAW,EAAC,yDAFd;MAGE,IAAI,EAAC,MAHP;MAIE,KAAK,EAAEE,OAJT;MAKE,QAAQ;IALV;MAAA;MAAA;MAAA;IAAA,QARF;EAAA,gBADF;AAkBD;;GA5CuBJ,Q;UACTF,oB;;;KADSE,Q;AA4CvB;AAED,MAAMe,aAAa,GAAGhB,MAAM,CAACiB,MAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtBA;MAAMD,a;AAwBN,MAAME,UAAU,GAAGlB,MAAM,CAACmB,KAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;MAAMD,U"},"metadata":{},"sourceType":"module"}