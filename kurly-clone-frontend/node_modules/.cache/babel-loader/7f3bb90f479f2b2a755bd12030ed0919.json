{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\"; // import { login } from \"../actions/user_action\"\n\nconst initialState = {\n  isLoggedIn: false,\n  user: null\n};\nexport const action = {\n  loginAction: createAsyncThunk(\"USER_LOGIN\", async userData => {\n    return axios({\n      method: 'post',\n      url: 'http://localhost:5000/api/login',\n      data: userData\n    }).then(res => res.data);\n  })\n}; // export const userSlice = createSlice({\n//   name: 'user',\n//   initialState,\n//   reducers:\n//   {\n//     loginAction: (state: UserState, action: PayloadAction<LoginPayload>) => {\n//       state.isLoggedIn = true;\n//       state.user = action.payload.data;\n//     },\n//     logoutAction: (state: UserState) => {\n//       state.isLoggedIn = false;\n//       state.user = null;\n//     },\n//   },\n// })\n// export const { loginAction, logoutAction } = userSlice.actions\n// export const selectUser = (state: any) => state.user.user\n// export default userSlice.reducer\n\nexport const reducer = {\n  loginAction: (state, action) => {\n    state.user = action.payload.data;\n  }\n};","map":{"version":3,"names":["createAsyncThunk","axios","initialState","isLoggedIn","user","action","loginAction","userData","method","url","data","then","res","reducer","state","payload"],"sources":["C:/Users/JUNE/Desktop/kurly-clone/kurly-clone-frontend/src/redux/features/userSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\"\r\nimport axios from \"axios\";\r\n// import { login } from \"../actions/user_action\"\r\nexport type UserState = {\r\n  isLoggedIn: boolean;\r\n  user: any;\r\n}\r\n\r\nexport type LoginPayload = {\r\n  memberId: string;\r\n  password: string;\r\n  name: string;\r\n}\r\n\r\nconst initialState: UserState = {\r\n  isLoggedIn: false,\r\n  user: null,\r\n}\r\n\r\nexport const action = {\r\n  loginAction: createAsyncThunk(\"USER_LOGIN\", async (userData: UserType) => {\r\n    return axios({\r\n      method: 'post',\r\n      url: 'http://localhost:5000/api/login',\r\n      data: userData,\r\n    }) .then(res => res.data);\r\n  })\r\n};\r\n\r\n// export const userSlice = createSlice({\r\n//   name: 'user',\r\n//   initialState,\r\n//   reducers:\r\n//   {\r\n//     loginAction: (state: UserState, action: PayloadAction<LoginPayload>) => {\r\n//       state.isLoggedIn = true;\r\n//       state.user = action.payload.data;\r\n\r\n//     },\r\n//     logoutAction: (state: UserState) => {\r\n//       state.isLoggedIn = false;\r\n//       state.user = null;\r\n//     },\r\n//   },\r\n// })\r\n\r\n// export const { loginAction, logoutAction } = userSlice.actions\r\n// export const selectUser = (state: any) => state.user.user\r\n// export default userSlice.reducer\r\n\r\nexport const reducer = {\r\n  loginAction: (state, action) => {\r\n    state.user = action.payload.data;\r\n  }\r\n}"],"mappings":"AACA,SAASA,gBAAT,QAAiC,kBAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AAYA,MAAMC,YAAuB,GAAG;EAC9BC,UAAU,EAAE,KADkB;EAE9BC,IAAI,EAAE;AAFwB,CAAhC;AAKA,OAAO,MAAMC,MAAM,GAAG;EACpBC,WAAW,EAAEN,gBAAgB,CAAC,YAAD,EAAe,MAAOO,QAAP,IAA8B;IACxE,OAAON,KAAK,CAAC;MACXO,MAAM,EAAE,MADG;MAEXC,GAAG,EAAE,iCAFM;MAGXC,IAAI,EAAEH;IAHK,CAAD,CAAL,CAIHI,IAJG,CAIEC,GAAG,IAAIA,GAAG,CAACF,IAJb,CAAP;EAKD,CAN4B;AADT,CAAf,C,CAUP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,OAAO,MAAMG,OAAO,GAAG;EACrBP,WAAW,EAAE,CAACQ,KAAD,EAAQT,MAAR,KAAmB;IAC9BS,KAAK,CAACV,IAAN,GAAaC,MAAM,CAACU,OAAP,CAAeL,IAA5B;EACD;AAHoB,CAAhB"},"metadata":{},"sourceType":"module"}