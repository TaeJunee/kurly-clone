{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useDaumPostcodePopup } from 'react-daum-postcode';\nexport default function SearchPostcode() {\n  _s();\n\n  const open = useDaumPostcodePopup();\n  const [isComplete, setIsComplete] = useState(false);\n  const [fullAddress, setAddress] = useState('');\n\n  const handleComplete = data => {\n    let fullAddress = data.address;\n    let extraAddress = '';\n\n    if (data.addressType === 'R') {\n      if (data.bname !== '') {\n        extraAddress += data.bname;\n      }\n\n      if (data.buildingName !== '') {\n        extraAddress += extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName;\n      }\n\n      fullAddress += extraAddress !== '' ? ` (${extraAddress})` : '';\n    }\n\n    setIsComplete(true);\n    setAddress(fullAddress);\n  };\n\n  const handleClick = () => {\n    open({\n      onComplete: handleComplete\n    });\n  };\n\n  return {\n    isComplete,\n    fullAddress,\n    handleClick\n  };\n}\n\n_s(SearchPostcode, \"gOxU5MX3r7YD3b7mcFP1+6YyZK0=\", false, function () {\n  return [useDaumPostcodePopup];\n});\n\n_c = SearchPostcode;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPostcode\");","map":{"version":3,"names":["useState","useDaumPostcodePopup","SearchPostcode","open","isComplete","setIsComplete","fullAddress","setAddress","handleComplete","data","address","extraAddress","addressType","bname","buildingName","handleClick","onComplete"],"sources":["C:/Users/JUNE/Desktop/market-kurly-react/src/components/signup/SearchPostCode.ts"],"sourcesContent":["import  { useState } from 'react';\r\nimport { useDaumPostcodePopup } from 'react-daum-postcode'\r\n\r\nexport default function SearchPostcode() {\r\n  const open = useDaumPostcodePopup();\r\n  const [isComplete, setIsComplete] = useState<boolean>(false);\r\n  const [fullAddress, setAddress] = useState<string>('');\r\n\r\n  const handleComplete = (data: any) => {\r\n    let fullAddress = data.address;\r\n    let extraAddress = '';\r\n\r\n    if (data.addressType === 'R') {\r\n      if (data.bname !== '') {\r\n        extraAddress += data.bname;\r\n      }\r\n      if (data.buildingName !== '') {\r\n        extraAddress += extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName;\r\n      }\r\n      fullAddress += extraAddress !== '' ? ` (${extraAddress})` : '';\r\n    }\r\n    setIsComplete(true);\r\n    setAddress(fullAddress);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    open({ onComplete: handleComplete });\r\n  };\r\n\r\n  return {\r\n    isComplete,\r\n    fullAddress,\r\n    handleClick,\r\n  }\r\n};"],"mappings":";;AAAA,SAAUA,QAAV,QAA0B,OAA1B;AACA,SAASC,oBAAT,QAAqC,qBAArC;AAEA,eAAe,SAASC,cAAT,GAA0B;EAAA;;EACvC,MAAMC,IAAI,GAAGF,oBAAoB,EAAjC;EACA,MAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAU,KAAV,CAA5C;EACA,MAAM,CAACM,WAAD,EAAcC,UAAd,IAA4BP,QAAQ,CAAS,EAAT,CAA1C;;EAEA,MAAMQ,cAAc,GAAIC,IAAD,IAAe;IACpC,IAAIH,WAAW,GAAGG,IAAI,CAACC,OAAvB;IACA,IAAIC,YAAY,GAAG,EAAnB;;IAEA,IAAIF,IAAI,CAACG,WAAL,KAAqB,GAAzB,EAA8B;MAC5B,IAAIH,IAAI,CAACI,KAAL,KAAe,EAAnB,EAAuB;QACrBF,YAAY,IAAIF,IAAI,CAACI,KAArB;MACD;;MACD,IAAIJ,IAAI,CAACK,YAAL,KAAsB,EAA1B,EAA8B;QAC5BH,YAAY,IAAIA,YAAY,KAAK,EAAjB,GAAuB,KAAIF,IAAI,CAACK,YAAa,EAA7C,GAAiDL,IAAI,CAACK,YAAtE;MACD;;MACDR,WAAW,IAAIK,YAAY,KAAK,EAAjB,GAAuB,KAAIA,YAAa,GAAxC,GAA6C,EAA5D;IACD;;IACDN,aAAa,CAAC,IAAD,CAAb;IACAE,UAAU,CAACD,WAAD,CAAV;EACD,CAfD;;EAiBA,MAAMS,WAAW,GAAG,MAAM;IACxBZ,IAAI,CAAC;MAAEa,UAAU,EAAER;IAAd,CAAD,CAAJ;EACD,CAFD;;EAIA,OAAO;IACLJ,UADK;IAELE,WAFK;IAGLS;EAHK,CAAP;AAKD;;GA/BuBb,c;UACTD,oB;;;KADSC,c;AA+BvB"},"metadata":{},"sourceType":"module"}